openapi: 3.0.0
info:
  title: Menu
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /Menu/CreateGameSession:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  SessionId:
                    type: string
              examples: {}
        '409':
          description: Conflict
      operationId: get-Menu-NewGame
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Bearer {token}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SessionCapacity:
                  type: integer
    parameters: []
  /Menu/JoinGameSession:
    post:
      summary: ''
      operationId: post-Menu-JoinGame
      responses:
        '200':
          description: OK
        '409':
          description: Conflict
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Token:
                  type: string
        description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Bearer {token}'
    parameters: []
  /Menu/LeaveGameSession:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
        '409':
          description: Conflict
      operationId: get-Menu-LeaveGame
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Bearer {token}'
    parameters: []
  /Menu/ListCreatedGameSessions:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  SessionId:
                    type: string
                  CreatorNickname:
                    type: string
                  SessionCapacity:
                    type: integer
                  SessionPlayerAmount:
                    type: number
      operationId: get-Menu-ListGameSessions
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: integer
          in: query
          name: limit
      description: Shows open sessions
    parameters: []
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
